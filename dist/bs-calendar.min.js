(function($){const DEFAULTS={locale:"en-EN",startWeekOnSunday:true,rounded:5,startDate:new Date,startView:"month",translations:{day:"Day",week:"Week",month:"Month",year:"Year",today:"Today",appointment:"Appointment"},url:null,queryParams:null};$.fn.bsCalendar=function(optionsOrMethod,params){if($(this).length>1){return $(this).each(function(i,e){return $(e).bsCalendar(optionsOrMethod,params)})}const optionsGiven=typeof optionsOrMethod==="object";const methodGiven=typeof optionsOrMethod==="string";const wrapper=$(this);if(!wrapper.data("initBsCalendar")){let settings=DEFAULTS;if(optionsGiven){settings=$.extend({},DEFAULTS,wrapper.data(),optionsOrMethod)}setSettings(wrapper,settings);init(wrapper).then(function(){wrapper.data("initBsCalendar",true)})}return wrapper};function init($wrapper){return new Promise((resolve,reject)=>{try{const settings=getSettings($wrapper);setView($wrapper,settings.startView);setDate($wrapper,settings.startDate);handleEvents($wrapper);buildFramework($wrapper);buildMonthSmallView($wrapper,getDate($wrapper),$(".wc-calendar-month-small"));buildByView($wrapper);resolve($wrapper)}catch(error){reject(error)}})}function buildFramework($wrapper){const settings=getSettings($wrapper);$wrapper.empty();const innerWrapper=$("<div>",{class:"d-flex flex-column align-items-stretch h-100 w-100"}).appendTo($wrapper);const topNav=$("<div>",{class:"d-flex sticky-top align-items-center justify-content-end mb-3 wc-calendar-top-nav  bg-body-tertiary rounded-"+settings.rounded}).appendTo(innerWrapper);const btnNew=$("<button>",{class:`btn rounded-${settings.rounded} border-3 border`,html:'<i class="bi bi-plus-lg"></i> '+settings.translations.appointment,click:function(){const date=new Date;setDate($wrapper,date);buildByView($wrapper)}}).appendTo(topNav);const spinner=$("<div>",{class:"spinner-border me-auto mx-3 text-secondary wc-calendar-spinner",css:{display:"none"},role:"status",html:'<span class="visually-hidden">Loading...</span>'}).appendTo(topNav);$("<div>",{class:"me-auto"}).appendTo(topNav);const navDate=$("<div>",{class:"d-flex mx-2 align-items-center justify-content-center wc-nav-view-wrapper",html:['<small class="wc-nav-view-name me-3">test</small>','<a class="wc-nav-view-prev" href="#"><i class="bi bi-chevron-left"></i></a>','<a class="wc-nav-view-next mx-2" href="#"><i class="bi bi-chevron-right"></i></a>'].join("")}).appendTo(topNav);const todayButton=$("<button>",{class:`btn rounded-${settings.rounded} border-3 mx-2 border`,html:settings.translations.today,click:function(){const date=new Date;setDate($wrapper,date);buildByView($wrapper)}}).appendTo(topNav);const dropDownView=$("<div>",{class:"dropdown wc-select-calendar-view",html:[`<a class="btn rounded-${settings.rounded} border border-3 dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">`,"</a>",'<ul class="dropdown-menu">','<li><a class="dropdown-item" data-view="day" href="#">'+settings.translations.day+"</a></li>",'<li><a class="dropdown-item" data-view="week" href="#">'+settings.translations.week+"</a></li>",'<li><a class="dropdown-item active" data-view="month" href="#">'+settings.translations.month+"</a></li>",'<li><a class="dropdown-item" data-view="year" href="#">'+settings.translations.year+"</a></li>","</ul>"].join("")}).appendTo(topNav);const container=$("<div>",{class:"d-flex flex-fill wc-calendar-container"}).appendTo(innerWrapper);const leftBar=$("<div>",{class:"wc-calendar-left-nav d-xl-flex d-none flex-column me-4",html:['<div class="pb-3">','<div class="d-flex justify-content-between">','<small class="wc-nav-view-small-name me-3">test</small>',"<div>",'<a class="wc-nav-view-prev" href="#"><i class="bi bi-chevron-left"></i></a>','<a class="wc-nav-view-next ms-2" href="#"><i class="bi bi-chevron-right"></i></a>',"</div>","</div>","</div>",'<div class="wc-calendar-month-small"></div>'].join("")}).appendTo(container);const viewContainer=$("<div>",{class:`container-fluid wc-calendar-view-container  border-1 rounded-${settings.rounded} flex-fill border overflow-hidden  d-flex flex-column align-items-stretch`}).appendTo(container)}function setCurrentDateName($wrapper){const settings=getSettings($wrapper);const date=getDate($wrapper);const view=getView($wrapper);const el=$(".wc-nav-view-name");const elSmall=$(".wc-nav-view-small-name");const dayName=date.toLocaleDateString(settings.locale,{day:"numeric"});const weekdayName=date.toLocaleDateString(settings.locale,{weekday:"long"});const monthName=date.toLocaleDateString(settings.locale,{month:"long"});const yearName=date.toLocaleDateString(settings.locale,{year:"numeric"});const calendarWeek=getCalendarWeek(date);switch(view){case"day":el.text(weekdayName+", "+dayName+" "+monthName+" "+yearName);break;case"week":el.text("KW "+calendarWeek+" / "+monthName+" "+yearName);break;case"month":el.text(monthName+" "+yearName);break;case"year":el.text(yearName);break}elSmall.text(monthName+" "+yearName)}function navigateBack($wrapper){const view=getView($wrapper);const date=getDate($wrapper);const newDate=new Date(date);switch(view){case"month":newDate.setMonth(newDate.getMonth()-1);if(newDate.getDate()!==date.getDate()){newDate.setDate(1)}break;case"year":newDate.setFullYear(newDate.getFullYear()-1);newDate.setDate(1);break;case"week":newDate.setDate(newDate.getDate()-7);break;case"day":newDate.setDate(newDate.getDate()-1);break}setDate($wrapper,newDate);buildByView($wrapper)}function navigateForward($wrapper){const view=getView($wrapper);const date=getDate($wrapper);const newDate=new Date(date);switch(view){case"month":newDate.setMonth(newDate.getMonth()+1);if(newDate.getDate()!==date.getDate()){newDate.setDate(1)}break;case"year":newDate.setFullYear(newDate.getFullYear()+1);newDate.setDate(1);break;case"week":newDate.setDate(newDate.getDate()+7);break;case"day":newDate.setDate(newDate.getDate()+1);break}setDate($wrapper,newDate);buildByView($wrapper)}function handleEvents($wrapper){$wrapper.on("click","[data-appointment]",function(e){e.preventDefault();const element=$(e.currentTarget);const appointment=element.data("appointment");$wrapper.trigger("click-appointment.bs.calendar",[appointment])}).on("click","[data-date]",function(e){e.preventDefault();const date=new Date($(e.currentTarget).attr("data-date"));setView($wrapper,"day");setDate($wrapper,date);buildByView($wrapper)}).on("click","[data-month]",function(e){e.preventDefault();const date=new Date($(e.currentTarget).attr("data-month"));setView($wrapper,"month");setDate($wrapper,date);buildByView($wrapper)}).on("click",".wc-nav-view-prev",function(e){e.preventDefault();navigateBack($wrapper)}).on("click",".wc-nav-view-next",function(e){e.preventDefault();navigateForward($wrapper)}).on("click",".wc-select-calendar-view [data-view]",function(e){e.preventDefault();const dropdown=$(e.currentTarget).closest(".dropdown");dropdown.find(".dropdown-item.active").removeClass("active");const a=$(e.currentTarget);const translate=a.text();dropdown.find(".dropdown-toggle").text(translate);const view=a.data("view");a.addClass("active");setView($wrapper,view);buildByView($wrapper)})}function updateDropdownView($wrapper){const dropdown=$wrapper.find(".wc-select-calendar-view");const view=getView($wrapper);dropdown.find(".dropdown-item.active").removeClass("active");dropdown.find(`[data-view="${view}"]`).addClass("active");dropdown.find(".dropdown-toggle").text(dropdown.find(`[data-view="${view}"]`).text())}function getView($wrapper){return $wrapper.data("view")}function setView($wrapper,view){if(!["day","week","month","year"].includes(view)){view="month"}$wrapper.data("view",view)}function getDate($wrapper){return $wrapper.data("date")}function setDate($wrapper,date){$wrapper.data("date",date)}function getSettings($wrapper){return $wrapper.data("settings")}function setSettings($wrapper,settings){$wrapper.data("settings",settings)}function getViewContainer($wrapper){return $wrapper.find(".wc-calendar-view-container")}function buildByView($wrapper){const view=getView($wrapper);const container=getViewContainer($wrapper).empty();switch(view){case"month":buildMonthView($wrapper);break;case"week":buildWeekView($wrapper);break;case"year":buildYearView($wrapper);break;case"day":buildDayView($wrapper);break;default:break}updateDropdownView($wrapper);setCurrentDateName($wrapper);buildMonthSmallView($wrapper,getDate($wrapper),$(".wc-calendar-month-small"));$wrapper.trigger("view-changed.bs.calendar",[view]);fetchAppointments($wrapper)}function fetchAppointments($wrapper){const date=getDate($wrapper);const view=getView($wrapper);const settings=getSettings($wrapper);const period=getStartAndEndDate(date,view);const spinner=$wrapper.find(".wc-calendar-spinner");const requestData={fromDate:period.start,toDate:period.end,view:view};if(typeof settings.queryParams==="function"){const queryParams=settings.queryParams(requestData);for(const key in queryParams){if(key!=="fromDate"&&key!=="toDate"&&key!=="view"){requestData[key]=queryParams[key]}}}if(typeof settings.url==="function"){showLoader($wrapper);const appointments=settings.url(requestData)||[];console.log("Termine per Funktion abrufen:",appointments);renderData($wrapper,appointments)}else if(typeof settings.url==="string"){showLoader($wrapper);$.ajax({url:"/api/get-appointments",method:"POST",contentType:"application/json",data:JSON.stringify(requestData),success:function(response){console.log("Termine per URL abrufen:",response);renderData($wrapper,response||[])},error:function(xhr,status,error){console.error("Fehler beim Abrufen der Termine:",status,error);hideLoader($wrapper)}})}}function isDarkColor(color){let r,g,b;if(color.startsWith("#")){r=parseInt(color.slice(1,3),16);g=parseInt(color.slice(3,5),16);b=parseInt(color.slice(5,7),16)}else if(color.startsWith("rgb")){const rgbValues=color.match(/\d+/g);r=parseInt(rgbValues[0]);g=parseInt(rgbValues[1]);b=parseInt(rgbValues[2])}else{throw new Error("Unsupported color format")}const yiq=(r*299+g*587+b*114)/1e3;return yiq>128}function checkAppointmentOverlap(appointment1,appointment2){return new Date(appointment1.start)<new Date(appointment2.end)&&new Date(appointment1.end)>new Date(appointment2.start)}function assignColumnsToAppointments(appointments){const columns=[];appointments.forEach(appointment=>{let placedInColumn=false;for(let i=0;i<columns.length;i++){const column=columns[i];if(fitsColumn(column,appointment)){column.push(appointment);placedInColumn=true;break}}if(!placedInColumn){columns.push([appointment])}});return columns}function fitsColumn(column,appointment){return column.every(colAppointment=>!checkAppointmentOverlap(appointment,colAppointment))}function buildAppointmentsForDay($container,appointments){const columns=assignColumnsToAppointments(appointments);const gap=2;const appointmentWidth=($container.width()-40)/columns.length-gap;columns.forEach((column,columnIndex)=>{column.forEach(appointment=>{const start=new Date(appointment.start);const end=new Date(appointment.end);const startHour=start.getHours();const startMinute=start.getMinutes();const endHour=end.getHours();const endMinute=end.getMinutes();const hourContainer=$container.find(`[data-day-hour="${startHour}"]`);const hourPositionTop=hourContainer.position().top;const minuteOffset=startMinute/60*34;const topPosition=hourPositionTop+minuteOffset;const durationInHours=endHour+endMinute/60-(startHour+startMinute/60);const appointmentHeight=durationInHours*34;const appointmentLeft=40+columnIndex*(appointmentWidth+gap);const appointmentElement=$("<small>",{"data-appointment":true,class:"position-absolute card shadow px-2 btn-sm wc-appointment-item overflow-hidden",css:{backgroundColor:appointment.color||"#007bff",color:!isDarkColor(appointment.color||"#007bff")?"#ffffff":"#000000",top:`${topPosition}px`,height:`${appointmentHeight}px`,left:`${appointmentLeft}px`,width:`${appointmentWidth}px`},html:`<div class="wc-appointment-item-content card-body p-1">
${start.toTimeString().slice(0,5)} - ${end.toTimeString().slice(0,5)} - 
${appointment.title||"Ohne Titel"}
</div>`}).appendTo($container);appointmentElement.data("appointment",appointment)})})}function buildAppointmentsForMonth($wrapper,appointments){const $container=getViewContainer($wrapper);const settings=getSettings($wrapper);appointments.forEach(appointment=>{const start=new Date(appointment.start);const startDate=start.toISOString().split("T")[0];const startTime=start.toLocaleTimeString(settings.locale,{hour:"2-digit",minute:"2-digit"});const dayContainer=$container.find(`[data-month-date="${startDate}"]`);const appointmentElement=$("<small>",{"data-appointment":true,css:{borderLeftColor:appointment.color||"#007bff",borderLeftWidth:"5px",borderLeftStyle:"solid"},class:"shadow-sm  px-2 mb-1 wc-appointment-item w-100 overflow-hidden",html:`<div class="wc-appointment-item-content">${startTime} - ${appointment.title}</div>`}).appendTo(dayContainer);appointmentElement.data("appointment",appointment)})}function renderData($wrapper,appointments){appointments.sort((a,b)=>new Date(a.start)-new Date(b.start));const view=getView($wrapper);const settings=getSettings($wrapper);console.log("render data in view:",view);const container=getViewContainer($wrapper);switch(view){case"day":const overContainer=container.find(".wc-day-view-time-slots");buildAppointmentsForDay(overContainer,appointments);break;case"week":break;case"month":buildAppointmentsForMonth($wrapper,appointments);break;case"year":break}hideLoader($wrapper)}function showLoader($wrapper){const spinner=$wrapper.find(".wc-calendar-spinner");spinner.show()}function hideLoader($wrapper){const spinner=$wrapper.find(".wc-calendar-spinner");spinner.hide()}function getStartAndEndDate(date,view){const startDate=new Date(date);const endDate=new Date(date);switch(view){case"day":break;case"week":const dayOfWeek=startDate.getDay();const diffToMonday=dayOfWeek===0?-6:1-dayOfWeek;startDate.setDate(startDate.getDate()+diffToMonday);endDate.setDate(startDate.getDate()+6);break;case"month":startDate.setDate(1);endDate.setMonth(startDate.getMonth()+1);endDate.setDate(0);break;case"year":startDate.setMonth(0);startDate.setDate(1);endDate.setMonth(11);endDate.setDate(31);break;default:console.warn("Unbekannte View:",view);break}return{start:startDate.toISOString().split("T")[0],end:endDate.toISOString().split("T")[0]}}function getShortWeekDayNames(locale,startWeekOnSunday){const formatter=new Intl.DateTimeFormat(locale,{weekday:"short"});const weekDays=[...Array(7).keys()].map(day=>formatter.format(new Date(Date.UTC(2023,0,day+1))));return startWeekOnSunday?weekDays:weekDays.slice(1).concat(weekDays[0])}function buildMonthView($wrapper){const container=getViewContainer($wrapper);const settings=getSettings($wrapper);const date=getDate($wrapper);const{locale,startWeekOnSunday}=settings;const year=date.getFullYear();const month=date.getMonth();const firstDayOfMonth=new Date(year,month,1);const lastDayOfMonth=new Date(year,month+1,0);let calendarStart=new Date(firstDayOfMonth);while(calendarStart.getDay()!==(startWeekOnSunday?0:1)){calendarStart.setDate(calendarStart.getDate()-1)}let calendarEnd=new Date(lastDayOfMonth);while(calendarEnd.getDay()!==(startWeekOnSunday?6:0)){calendarEnd.setDate(calendarEnd.getDate()+1)}container.empty();const weekdaysRow=$("<div>",{class:"row d-flex flex-nowrap wc-calendar-weekdays fw-bold text-bg-secondary"}).append($("<div>",{class:"col d-flex align-items-center justify-content-center",style:"width: 24px",html:"<small></small>"}));const weekDays=getShortWeekDayNames(locale,startWeekOnSunday);weekDays.forEach(day=>{weekdaysRow.append($("<div>",{class:"text-center col flex-fill",html:`<small>${day}</small>`}))});container.append(weekdaysRow);let currentDate=new Date(calendarStart);while(currentDate<=calendarEnd){const weekRow=$("<div>",{class:"row d-flex flex-nowrap flex-fill wc-calendar-content"});const calendarWeek=getCalendarWeek(currentDate);weekRow.append($("<div>",{class:"col d-flex align-items-start py-2 fw-bold text-bg-secondary justify-content-center",style:"width: 24px;",html:`<small>${calendarWeek}</small>`}));for(let i=0;i<7;i++){const isToday=currentDate.toDateString()===(new Date).toDateString();const isOtherMonth=currentDate.getMonth()!==month;const dayClass=isToday?"rounded-circle text-bg-primary":"";const dayWrapper=$("<div>",{"data-month-date":formatDate($wrapper,currentDate),class:`col border flex-fill d-flex flex-column align-items-center justify-content-start ${isOtherMonth?"text-muted":""} ${isToday?"":""}`}).appendTo(weekRow);$("<small>",{"data-date":formatDate($wrapper,currentDate),css:{width:"24px",height:"24px",lineHeight:"24px",fontSize:"12px"},class:`${dayClass} text-center`,text:currentDate.getDate()}).appendTo(dayWrapper);currentDate.setDate(currentDate.getDate()+1)}container.append(weekRow)}}function buildMonthSmallView($wrapper,forDate,$container){const settings=getSettings($wrapper);const date=forDate;const activeDate=getDate($wrapper);const year=date.getFullYear();const month=date.getMonth();const firstDayOfMonth=new Date(year,month,1);const lastDayOfMonth=new Date(year,month+1,0);let calendarStart=new Date(firstDayOfMonth);while(calendarStart.getDay()!==1){calendarStart.setDate(calendarStart.getDate()-1)}let calendarEnd=new Date(lastDayOfMonth);while(calendarEnd.getDay()!==0){calendarEnd.setDate(calendarEnd.getDate()+1)}$container.empty();$container.addClass("table-responsive");const table=$("<table>",{class:"wc-mini-calendar",css:{fontSize:"10px",borderSpacing:"0",borderCollapse:"collapse",tableLayout:"fixed",textAlign:"center",verticalAlign:"middle",lineHeight:"1.5",padding:"0",margin:"0",backgroundColor:"transparent",border:"0"}}).appendTo($container);const thead=$("<thead>").appendTo(table);const weekdaysRow=$("<tr>",{class:"",css:{height:"24px"}}).appendTo(thead);$("<th>",{class:"",css:{width:"15px"},text:""}).appendTo(weekdaysRow);const weekDays=getShortWeekDayNames(settings.locale,settings.startWeekOnSunday);weekDays.forEach(day=>{$("<th>",{class:"",text:day}).appendTo(weekdaysRow)});const tbody=$("<tbody>").appendTo(table);let currentDate=new Date(calendarStart);while(currentDate<=calendarEnd){const weekRow=$("<tr>",{css:{fontSize:"10px"}}).appendTo(tbody);const calendarWeek=getCalendarWeek(currentDate);$("<td>",{css:{width:"10px",fontSize:"10px"},class:"border-end pe-1 text-end text-secondary fw-bold",text:calendarWeek}).appendTo(weekRow);for(let i=0;i<7;i++){const isToday=currentDate.toDateString()===(new Date).toDateString();const isOtherMonth=currentDate.getMonth()!==month;const isSelected=currentDate.toDateString()===activeDate.toDateString();let dayClass="rounded-circle";if(isToday){dayClass+="  text-bg-primary "}if(isOtherMonth){dayClass+=" text-muted opacity-50"}if(isSelected&&!isToday){dayClass+=" border border-warning"}const td=$("<td>",{"data-date":formatDate($wrapper,currentDate),css:{cursor:"pointer",fontSize:"10px",width:"24px",height:"24px",lineHeight:"24px",verticalAlign:"middle",textAlign:"center"},html:`<div class="${dayClass} w-100 h-100 d-flex justify-content-center align-items-center">${currentDate.getDate()}</div>`}).appendTo(weekRow);currentDate.setDate(currentDate.getDate()+1)}}}function buildDayView($wrapper){const container=getViewContainer($wrapper);const date=getDate($wrapper);buildDayViewContent($wrapper,date,container)}function formatDate($wrapper,date){const settings=getSettings($wrapper);let day=date.toLocaleDateString(settings.locale,{day:"numeric"});if(day<10){day="0"+day}let month=date.toLocaleDateString(settings.locale,{month:"numeric"});if(month<10){month="0"+month}const year=date.toLocaleDateString(settings.locale,{year:"numeric"});return`${year}-${month}-${day}`}function getCalendarWeek(date){const target=new Date(Date.UTC(date.getFullYear(),date.getMonth(),date.getDate()));const dayNr=(target.getUTCDay()+6)%7;target.setUTCDate(target.getUTCDate()-dayNr+3);const firstThursday=new Date(Date.UTC(target.getUTCFullYear(),0,4));const firstDayOfWeek=firstThursday.getUTCDate()-(firstThursday.getUTCDay()+6)%7;const weekNumber=Math.floor(1+(target-new Date(Date.UTC(target.getUTCFullYear(),0,firstDayOfWeek)))/(7*24*60*60*1e3));return weekNumber}function buildWeekView($wrapper){const $viewContainer=getViewContainer($wrapper);$viewContainer.empty();const $container=$("<div>",{class:"position-relative px-5"}).appendTo($viewContainer);const date=getDate($wrapper);const settings=getSettings($wrapper);const{startWeekOnSunday}=settings;const currentDay=date.getDay();const startOfWeek=new Date(date);const startOffset=startWeekOnSunday?currentDay:currentDay===0?6:currentDay-1;startOfWeek.setDate(date.getDate()-startOffset);const endOfWeek=new Date(startOfWeek);endOfWeek.setDate(startOfWeek.getDate()+6);const weekContainer=$("<div>",{class:"wc-week-view d-flex flex-nowrap"}).appendTo($container);for(let day=0;day<7;day++){const currentDate=new Date(startOfWeek);currentDate.setDate(startOfWeek.getDate()+day);const dayContainer=$("<div>",{class:"wc-day-view flex-grow-1 flex-fill border-end"}).appendTo(weekContainer);const showLabels=day===0;buildDayViewContent($wrapper,currentDate,dayContainer,true,showLabels)}}function buildDayViewContent($wrapper,date,$container,forWeekView=false,showLabels=true){const settings=getSettings($wrapper);if(!forWeekView){$container=$("<div>",{class:"position-relative px-5 overflow-auto"}).appendTo($container)}else{const isToday=date.toDateString()===(new Date).toDateString();if(isToday){$container.addClass("text-bg-light")}}$container.attr("data-weekday");const headline=$("<div>",{class:"wc-day-header py-2 text-center fw-bold mb-2",text:date.toLocaleDateString(settings.locale,{weekday:"long",day:"numeric",month:"long"})}).appendTo($container);if(forWeekView){headline.attr("data-date",formatDate($wrapper,date)).css("cursor","pointer")}const timeSlots=$("<div>",{class:"wc-day-view-time-slots d-flex flex-column position-relative  py-2"}).appendTo($container);for(let hour=0;hour<=24;hour++){const row=$("<div>",{"data-day-hour":hour,css:{height:"34px"},class:"d-flex align-items-center border-top position-relative"}).appendTo(timeSlots);if(showLabels){$("<div>",{class:"wc-time-label ps-2 position-absolute top-0 start-0 translate-middle text-bg-light",html:`${hour.toString().padStart(2,"0")}:00 <i class="bi bi-caret-right-fill"></i>`}).appendTo(row)}}}function buildYearView($wrapper){const container=getViewContainer($wrapper);const settings=getSettings($wrapper);const date=getDate($wrapper);const year=date.getFullYear();container.empty();const grid=$("<div>",{class:"d-flex flex-wrap p-3",css:{gap:"10px"}}).appendTo(container);for(let month=0;month<12;month++){const monthWrapper=$("<div>",{class:"d-flex shadow p-3 flex-column rounded-"+settings.rounded+" align-items-center wc-year-month-container",css:{width:"200px",margin:"5px"}}).appendTo(grid);const monthName=new Intl.DateTimeFormat(settings.locale,{month:"long"}).format(new Date(year,month));$("<div>",{"data-month":`${year}-${String(month+1).padStart(2,"0")}-01`,class:"text-center fw-bold",text:`${monthName} ${year}`,css:{cursor:"pointer",marginBottom:"10px"}}).appendTo(monthWrapper);const monthContainer=$("<div>").appendTo(monthWrapper);const tempDate=new Date(year,month,1);buildMonthSmallView($wrapper,tempDate,monthContainer)}}})(jQuery);